{"version":3,"sources":["components/ReadOnlyRow.js","components/EditableRow.js","Tech/Tech.js","Navbar/Navbar.js","Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ReadOnlyRow","activitate","member","handleEditClick","handleDeleteClick","style","color","nume","prenume","nr_tel","mail","type","onClick","event","id","EditableRow","editFormData","handleEditFormChange","handleCancelClick","required","placeholder","name","value","onChange","require","polyfill","Tech","useState","data","members","setMembers","setData","useEffect","fetch","method","mode","then","response","json","catch","err","console","log","message","text","localStorage","getItem","JSON","parse","setItem","stringify","addFormData","setAddFormData","setEditFormData","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","setEditMemberId","formValues","editMemberId","handleAddFormChange","memberId","newMembers","index","findIndex","splice","className","onSubmit","editedMember","href","map","newMember","nanoid","table","filename","sheet","buttonText","Navbar","src","alt","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e61cdbcf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst getColor=(activitate)=>{\r\n    if(activitate<2) return 'red';\r\n    return ' ';\r\n};\r\n\r\nconst ReadOnlyRow = ({ member, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr style={{color:getColor(member.activitate)}}>\r\n    <td>{member.nume}</td>\r\n     <td>{member.prenume}</td>\r\n     <td>{member.activitate}</td>\r\n     <td>{member.nr_tel}</td>\r\n     <td>{member.mail}</td>\r\n                        \r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, member)}\r\n        >Editeaza</button>\r\n        <button type=\"button\" onClick={() =>  handleDeleteClick(member.id)}>Stergere</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\n\r\nconst EditableRow =  ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  \r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Introduceti numele...\"\r\n          name=\"nume\"\r\n          value={editFormData.nume}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n           type=\"text\"\r\n           required=\"required\"\r\n           placeholder=\"Introduceti prenumele...\"\r\n           name=\"prenume\"\r\n          value={editFormData.prenume}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Introduceti numarul de perioade active...\"\r\n          name=\"activitate\"\r\n          value={editFormData.activitate}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Introduceti numarul de telefon...\"\r\n          name=\"nr_tel\"\r\n          value={editFormData.nr_tel}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"email\"\r\n          required=\"required\"\r\n          placeholder=\"Introduceti mail-ul institutional...\"\r\n          name=\"mail\"\r\n          value={editFormData.mail}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        \r\n          <button type=\"submit\">Salveaza</button>\r\n          <button  type=\"button\" onClick={handleCancelClick}>\r\n            Anuleaza\r\n          </button>\r\n      \r\n        \r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;\r\n","import React,{useState,Fragment,useEffect} from 'react'\r\n//import {NavLink} from 'react-router-dom' //eroare-path changed\r\nimport data from './data.json'\r\nimport { nanoid } from \"nanoid\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport './tech.scss'\r\nimport ReadOnlyRow from '../components/ReadOnlyRow';\r\nimport EditableRow from '../components/EditableRow';\r\n\r\n\r\nconst getColor=(activitate)=>{\r\n    if(activitate<2) return 'red';\r\n    return ' ';\r\n};\r\n\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\n\r\nconst Tech=()=>{\r\n\r\n    \r\n    const[members, setMembers]=useState(data);\r\n    const[Data,setData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const url=\"http://localhost:64975/api/Member\";\r\n\r\n        fetch(url,{\r\n            method:\"get\",\r\n            mode:'no-cors'\r\n        })\r\n        .then((response)=>response.json()) //turns the http response data into json data\r\n        .then((json)=>setData(json))\r\n        .catch(err=>{\r\n            console.log(err.message)\r\n        });\r\n   }, []);\r\n\r\n    \r\n    useEffect(()=> {\r\n        const text = localStorage.getItem(\"user\");\r\n        if(text)\r\n         {\r\n          setMembers (JSON.parse(text));\r\n         }\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(\"user\", JSON.stringify(members));\r\n    }, []);\r\n\r\n    const[addFormData,setAddFormData]=useState({\r\n        nume:'',\r\n        prenume:'',\r\n        activitate:'',\r\n        nr_tel:'',\r\n        mail:''\r\n    })\r\n\r\n    const [editFormData, setEditFormData] = useState({\r\n        nume: \"\",\r\n        prenume: \"\",\r\n        activitate: \"\",\r\n        nr_tel: \"\",\r\n        mail: \"\",\r\n    });\r\n    \r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n    \r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n    \r\n        setEditFormData(newFormData);\r\n    }; \r\n    \r\n    const handleEditClick = (event, member) => {\r\n        event.preventDefault();\r\n        setEditMemberId(member.id);\r\n    \r\n        const formValues = {\r\n          nume: member.nume,\r\n          prenume: member.prenume,\r\n          activitate: member.activitate,\r\n          nr_tel: member.nr_tel,\r\n          mail: member.mail,\r\n        };\r\n    \r\n        setEditFormData(formValues);\r\n    };\r\n\r\n    const [editMemberId, setEditMemberId] = useState(null);\r\n\r\n    const handleAddFormChange=(event)=>{\r\n        event.preventDefault();\r\n\r\n        const fieldName=event.target.getAttribute('name');\r\n        const fieldValue=event.target.value;\r\n\r\n        const newFormData={...addFormData};\r\n        newFormData[fieldName]=fieldValue;\r\n\r\n        setAddFormData(newFormData);\r\n    };\r\n    \r\n    const handleAddFormSubmit = (event) => {\r\n        event.preventDefault(); //prevents a post request\r\n\r\n        const newMember={\r\n            id: nanoid(),\r\n            nume:addFormData.nume,\r\n            prenume:addFormData.prenume,\r\n            activitate:addFormData.activitate,\r\n            nr_tel:addFormData.nr_tel,\r\n            mail:addFormData.mail\r\n        };\r\n\r\n        const newMembers=[...members, newMember];\r\n        setMembers(newMembers);\r\n\r\n        // Axios.post(url,{\r\n        //     nume:members.nume,\r\n        //     prenume:members.prenume,\r\n        //     activitate:members.activitate,\r\n        //     nr_tel:members.nr_tel,\r\n        //     mail:members.mail,\r\n        // })\r\n        // .then(res=>{\r\n        //     console.log(res.members)\r\n        // })\r\n        \r\n        console.log(\"membrii\",newMembers);\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const editedMember = {\r\n          id: editMemberId,\r\n          nume: editFormData.nume,\r\n          prenume: editFormData.prenume,\r\n          activitate: editFormData.activitate,\r\n          nr_tel: editFormData.nr_tel,\r\n          mail: editFormData.mail,\r\n        };\r\n    \r\n        const newMembers = [...members];\r\n    \r\n        const index = members.findIndex((member) => member.id === editMemberId);\r\n    \r\n        newMembers[index] = editedMember;\r\n    \r\n        setMembers(newMembers);\r\n        setEditMemberId(null);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setEditMemberId(null);\r\n    };\r\n\r\n\r\n    const handleDeleteClick = (memberId) => {\r\n        const newMembers = [...members];\r\n    \r\n        const index = members.findIndex((member) => member.id === memberId);\r\n    \r\n        newMembers.splice(index, 1);\r\n    \r\n        setMembers(newMembers);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tabel-container\">\r\n            <form onSubmit={handleEditFormSubmit}>\r\n                <div className=\"links\"> \r\n                    <li>\r\n                        <a className=\"active\" href=\"tech\">Tech</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"promo\">Promovare</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"rep\">Reprezentare</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"hr\">HR</a>\r\n                    </li>\r\n                \r\n                </div>\r\n                <table className=\"table\" id=\"table-to-xls\"> \r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nume</th>\r\n                            <th>Prenume</th>\r\n                            <th>Numar perioade active</th>\r\n                            <th>Numar de telefon</th>\r\n                            <th>Adresa de mail institutionala</th>\r\n                        </tr>\r\n                    \r\n                    </thead> \r\n                            \r\n                    <tbody>\r\n                        {members.map((member,index)=>(\r\n                                //<tr style={{color:getColor(member.activitate)}}>\r\n                                <Fragment>\r\n                                    {editMemberId === member.id ? (\r\n                                    <EditableRow\r\n                                        editFormData={editFormData}\r\n                                        handleEditFormChange={handleEditFormChange}\r\n                                        handleCancelClick={handleCancelClick} />\r\n                                    ) : (\r\n\r\n                                    <ReadOnlyRow member={member}\r\n                                        handleEditClick={handleEditClick}\r\n                                        handleDeleteClick={handleDeleteClick} />\r\n                                    )}\r\n                                </Fragment>\r\n                            //</tr>\r\n                        ))}\r\n                            \r\n                    </tbody> \r\n                </table>\r\n            </form>\r\n                \r\n\r\n           \r\n            <h3>Adauga un membru nou</h3>\r\n           \r\n            <form onSubmit={handleAddFormSubmit}>\r\n            <div className=\"membru-buton\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"nume\"\r\n                    required=\"required\"\r\n                    placeholder=\"Nume\"\r\n                    onChange={handleAddFormChange}\r\n                />\r\n                 \r\n                <input\r\n                    type=\"text\"\r\n                    name=\"prenume\"\r\n                    required=\"required\"\r\n                    placeholder=\"Prenume\"\r\n                    onChange={handleAddFormChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"activitate\"\r\n                    required=\"required\"\r\n                    placeholder=\"Activitate\"\r\n                    onChange={handleAddFormChange}\r\n                />\r\n        \r\n                <input\r\n                    type=\"text\"\r\n                    name=\"nr_tel\"\r\n                    required=\"required\"\r\n                    placeholder=\"Numar de telefon\"\r\n                    onChange={handleAddFormChange}\r\n                />\r\n        \r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mail\"\r\n                    required=\"required\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleAddFormChange}\r\n                />\r\n                </div>  \r\n                \r\n                <div className=\"save-button\">\r\n                    <button\r\n                     type=\"submit\">Adauga</button>\r\n                </div>  \r\n            </form>\r\n\r\n\r\n            <div className=\"xls-button\">\r\n                <ReactHTMLTableToExcel\r\n                    id=\"xls-button\"\r\n                    className=\"download\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"Tabel_activ\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Export Data to Excel Sheet\"\r\n                />\r\n            </div>\r\n\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tech;\r\n\r\n","import React from 'react'\r\nimport './navbar.scss'\r\n\r\n\r\nfunction Navbar() {\r\n\r\n   \r\n    return (\r\n        <div className=\"Navbar\">\r\n            <div className=\"leftSide\">\r\n                <div>Microsoft Learn Student Ambassador</div>\r\n                <img src=\"/images/logo.png\" alt=\"\"/>\r\n            </div>\r\n            \r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport './footer.scss'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\"/>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import Tech from './Tech/Tech';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Footer from './Footer/Footer';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar/>\r\n      <Tech/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}